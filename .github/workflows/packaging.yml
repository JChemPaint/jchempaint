name: Release Packaging

on:
  workflow_dispatch

jobs:
  release:
    name: Make Nightly release
    runs-on: ubuntu-22.04
    steps:
      - name: Update Nightly Release
        uses: andelf/nightly-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly
          name: 'Desktop App Nightly Release $$'
          prerelease: true
          body: 'Nightly build of JChemPaint'

  linux:
    name: Linux JAR
    needs: release
    runs-on: ubuntu-22.04
    steps:
      - name: Clone Repository
        uses: actions/checkout@v5

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 17
          cache: maven

      - name: Install gettext
        run: sudo apt install -y gettext

      - name: Package JAR
        env:
          MAVEN_ARGS: "--batch-mode --no-transfer-progress -Dstyle.color=always"
        run: |
          mvn install -DskipTests

      - name: Upload Package
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          gh release upload nightly app-jar/target/JChemPaint.jar

  macos:
    name: macOS Disk Image
    needs: release
    runs-on: macos-13
    steps:
      - name: Clone Repository
        uses: actions/checkout@v5

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 17
          cache: maven

      - name: Import signing certificate
        run: |
          echo "${{ secrets.MACOS_DEVELOPER_CERTIFICATE_BASE64 }}" | base64 --decode > build.p12
          security create-keychain -p build build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p build build.keychain
          security import build.p12 -k build.keychain -P "${{ secrets.MACOS_DEVELOPER_CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign >/dev/null 2>&1
          security set-key-partition-list -S apple-tool:,apple: -s -k build build.keychain >/dev/null 2>&1
          rm -fr build.p12

      - name: Package Disk Image
        env:
          MAVEN_ARGS: "--batch-mode --no-transfer-progress -Dstyle.color=always"
        run: |
          mvn install -DskipTests -Posx-app -Dcodesign.identity="${{ secrets.MACOS_DEVELOPER_IDENTITY }}"
          mv app-osx/target/*.dmg JChemPaint.dmg

        # Fails because the step above does not codesign the included native dependencies.
      - name: Notarize
        if: false
        run: |
          xcrun notarytool submit JChemPaint.dmg --wait --apple-id "${{ secrets.MACOS_DEVELOPER_USERNAME }}" --password "${{ secrets.MACOS_DEVELOPER_PASSWORD }}" --team-id "${{ secrets.MACOS_DEVELOPER_IDENTITY }}" > result.txt 2>&1
          SUBMISSION_ID=`awk '/id: / { print $2;exit; }' result.txt`
          xcrun notarytool log "$SUBMISSION_ID" --apple-id ${{ secrets.MACOS_DEVELOPER_USERNAME }} --password ${{ secrets.MACOS_DEVELOPER_PASSWORD }} --team-id ${{ secrets.MACOS_DEVELOPER_IDENTITY }} log.json
          cat log.json

          xcrun stapler staple JChemPaint.dmg
          xcrun stapler validate JChemPaint.dmg

      - name: Upload Package
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          gh release upload nightly JChemPaint.dmg
