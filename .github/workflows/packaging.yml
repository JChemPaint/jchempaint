name: Release Packaging

on:
  workflow_dispatch

jobs:
  release:
    name: Make Nightly release
    runs-on: ubuntu-22.04
    steps:
      - name: Update Nightly Release
        uses: andelf/nightly-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly
          name: 'Desktop App Nightly Release $$'
          prerelease: true
          body: 'Nightly build of JChemPaint'

  linux:
    name: Linux JAR
    needs: release
    runs-on: ubuntu-22.04
    steps:
      - name: Clone Repository
        uses: actions/checkout@v5

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 17
          cache: maven

      - name: Install gettext
        run: sudo apt install -y gettext

      - name: Package JAR
        env:
          MAVEN_ARGS: "--batch-mode --no-transfer-progress -Dstyle.color=always"
        run: |
          mvn install -DskipTests

      - name: Upload Package
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          gh release upload nightly app-jar/target/JChemPaint.jar

  macos:
    name: macOS Disk Image
    needs: release
    runs-on: macos-13
    steps:
      - name: Clone Repository
        uses: actions/checkout@v5

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 17
          cache: maven

      - name: Package Disk Image
        env:
          MACOS_DEVELOPER_IDENTITY: ${{ secrets.MACOS_DEVELOPER_IDENTITY }}
          MACOS_DEVELOPER_CERTIFICATE_BASE64: ${{ secrets.MACOS_DEVELOPER_CERTIFICATE_BASE64 }}
          MACOS_DEVELOPER_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_DEVELOPER_CERTIFICATE_PASSWORD }}
          MACOS_DEVELOPER_USERNAME: ${{ secrets.MACOS_DEVELOPER_USERNAME }}
          MACOS_DEVELOPER_PASSWORD: ${{ secrets.MACOS_DEVELOPER_PASSWORD }}
          MAVEN_ARGS: "--batch-mode --no-transfer-progress -Dstyle.color=always"
        run: |
          mvn install -DskipTests -Posx-app

      - name: Upload Package
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          mv app-osx/target/*.dmg app-osx/target/JChemPaint.dmg
          gh release upload nightly app-osx/target/*.dmg
